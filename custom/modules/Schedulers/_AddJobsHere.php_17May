<?php
/*
 * Author: Noresha Ankani
 * Date Created: 18/03/2016
 * Purpose: Case Escalation
 * 
 */
if(!defined('sugarEntry') || !sugarEntry) die('Not A Valid Entry Point');
require_once('include/entryPoint.php');
include_once('include/SugarPHPMailer.php');
include_once('include/utils/db_utils.php');
include('custom/include/language/en_us.lang.php');
include('include/language/en_us.lang.php');
date_default_timezone_set('UTC');
//including custom scheduler
array_push($job_strings, 'Case_Escalation');
array_push($job_strings, 'Contact_Creation');
array_push($job_strings, 'Active_Users');
array_push($job_strings, 'GetState');
array_push($job_strings, 'GetCity');
array_push($job_strings, 'GetPincode');
array_push($job_strings, 'ReassignmentData');
array_push($job_strings, 'UserProductivity');
array_push($job_strings, 'caseAgeing');
array_push($job_strings, 'setuptimer_escalation');

function Contact_Creation()
{
	global $db, $sugar_config;
	$username = $sugar_config["webservice_username"];
	$password = $sugar_config["webservice_password"];
	date_default_timezone_set('UTC');
	/***************log file***************************/
	$schedulerLogFile = '/var/www/html/crm/custom/modules/Schedulers/user_creation_log.txt';  
	$schedulerHandle = fopen($schedulerLogFile, 'a');
	$timestamp = date('Y-m-d H:i:s',strtotime('+5 hours +30 minutes', strtotime('now')));
	$status = "CRON Run Successful! - CONTACT CREATION";
	$logMessage = "\n\nScheduler Result at $timestamp :- $status";
	fwrite($schedulerHandle, $logMessage);
	
	/*************curl for getting user data from 3rd party********************/
	$url = $sugar_config['getuserdataforcrm'];
	$ch = curl_init($url);
	curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "GET");
	curl_setopt($ch, CURLOPT_POSTFIELDS, $postData);
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);	
	//curl_setopt($ch,CURLOPT_HTTPHEADER, array('Authorization:Crypto cxZEBsIOiyXi8fOi8MJZ/mNyLZf67V2CQLvG2McCei2f+X87ft7KquuxJPywhCzH',
	curl_setopt($ch,CURLOPT_HTTPHEADER, array('Authorization:Crypto 4IilG3pP+ESLwADK0b4TboG2Okn54Fixu4dW9P7ayHpUSXgNHpz11CdZP5qXK0XI',
											'Content-Type: application/json',
											'Content-Length: ' . strlen($postData)));
	$result = curl_exec($ch);
	curl_close($ch);
	$GetUserDataforCRM = json_decode($result, true);
	$GetUserData = $GetUserDataforCRM['data'];
	$logArray = print_r($GetUserData[0], true);
    $logMessage = "\n\nScheduler Result at $timestamp :-\n$logArray";
    fwrite($schedulerHandle, $logMessage);
	if (empty($GetUserData)) 
	{
		$today_date= date('Y-m-d H:i:s');
		$id = create_guid();
		$insert_log_query = $db->query("INSERT INTO scrm_user_creation_log (id,name,date_entered,description,deleted)  VALUES ('$id','0 Users','$today_date','Empty Data',0)");
	   $GetUserDataCRMStatus = array(
            'notice' => 'Returned empty data array.'
        );
        $logArray = print_r($GetUserDataCRMStatus, true);
        $logMessage = "\n\nScheduler Result at $timestamp :-\n$logArray";
        fwrite($schedulerHandle, $logMessage);
        return true;
    }
	/******generating sugar session id*********/
	$loginResult = login($username, $password);
	$sessionID = $loginResult->id;
	$module = "Contacts";
$id = create_guid();
foreach($GetUserData as $GetUserSet){
	$user_code  .= $GetUserSet["uniqueCustomerCode"].',';
	$batchID = $GetUserSet["batchID"];
}
$today_date= date('Y-m-d H:i:s');
$user_code = substr($user_code,0,-1);
$insert_log_query = $db->query("INSERT INTO scrm_user_creation_log (id,name,date_entered,description,deleted)  VALUES ('$id','".sizeof($GetUserData)." Users','$today_date','Customer Codes - $user_code',0)");
$insert_custom_query = $db->query("INSERT INTO scrm_user_creation_log_cstm (id_c,batch_id_c)  VALUES ('$id','$batchID')");
$responseData = array();
$i = 0;
	foreach($GetUserData as $GetUserSet){
		$salutation = $GetUserSet["salutation"];
		$name = $GetUserSet["name"];	
		$emailID = $GetUserSet["emailID"];
		$mobileNumber = $GetUserSet["mobileNumber"];
		$uniqueCustomerCode = $GetUserSet["uniqueCustomerCode"];
		$classificationOfTheAccountForPotential = $GetUserSet["classificationOfTheAccountForPotential"];
		$address = $GetUserSet["address"];
		$city = $GetUserSet["city"];
		$state = $GetUserSet["state"];
		$country = $GetUserSet["country"];
		$pinCode = $GetUserSet["pinCode"];
		$gateway = $GetUserSet["gateway"];
		$campaignType = $GetUserSet["campaignType"];
		$campaignSubType = $GetUserSet["campaignSubType"];
		$relatedCorporateAccount = $GetUserSet["relatedCorporateAccount"];
		$relatedKioskAccount = $GetUserSet["relatedKioskAccount"];
		$userType = $GetUserSet["userType"];
		$adoptionPercentage = $GetUserSet["adoptionPercentage"];
		$userCreationDate = date('Y-m-d H:i:s',strtotime("-5 hours, -30 minutes", strtotime($GetUserSet["userCreationDate"])));
		$publisherID = $GetUserSet["publisherID"];
		$publisherName = $GetUserSet["publisherName"];
		$riskProfile = $GetUserSet["riskProfile"];
		$batchID = $GetUserSet["batchID"];
		$leadDate = date('Y-m-d H:i:s',strtotime("-5 hours, -30 minutes", strtotime($GetUserSet["leadDate"])));
		if((isset($GetUserSet["firstCalledOn"])) || ($GetUserSet["firstCalledOn"] !='NA')){
			$FirstCalledOn = date('Y-m-d H:i:s',strtotime("-5 hours, -30 minutes", strtotime($GetUserSet["firstCalledOn"])));
		}else{
			$FirstCalledOn = '0000-00-00 00:00:00';
		}
		$FirstDisposition = $GetUserSet["firstDisposition"];
		if((isset($GetUserSet["secondCalledOn"])) || ($GetUserSet["secondCalledOn"] !='NA')){
			$SecondCalledOn = date('Y-m-d H:i:s',strtotime("-5 hours, -30 minutes", strtotime($GetUserSet["secondCalledOn"])));
		}else{
			$SecondCalledOn = '0000-00-00 00:00:00';
		}
		$SecondDisposition = $GetUserSet["secondDisposition"];
		if((isset($GetUserSet["thirdCalledOn"])) || ($GetUserSet["thirdCalledOn"] !='NA')){
			$ThirdCalledOn = date('Y-m-d H:i:s',strtotime("-5 hours, -30 minutes", strtotime($GetUserSet["thirdCalledOn"])));
		}else{
			$ThirdCalledOn = '0000-00-00 00:00:00';
		}	
		$ThirdDisposition = $GetUserSet["thirdDisposition"];
		$DateOfValidation = $GetUserSet["dateOfValidation"];
		$Lastadvisor = $GetUserSet["lastadvisor"];
		$Age = $GetUserSet["age"];
		$AgreeToAssignAdvisor = $GetUserSet["agreeToAssignAdvisor"];
		$PrefferedDateToCall = date('Y-m-d',strtotime("-5 hours, -30 minutes", strtotime($GetUserSet["prefferedDateToCall"])));
		$PrefferedTimeToCall = date('H:i:s',strtotime("-5 hours, -30 minutes", strtotime($GetUserSet["prefferedDateToCall"])));
		$Gender = $GetUserSet["gender"];
		$comments = $GetUserSet["comments"];
		$lastDisposition = $GetUserSet["lastDisposition"];
		if(!empty($Gender)){
			Switch($Gender){
				case 'M':$Gender='Male';break;
				case 'F': $Gender = 'Female';break;
				default: $Gender='';break;
			}
		}
		if(!(empty($name)))
		{
			$name_array = explode(" ", $name);
			$first_name = $name_array[0];
			$middle_name = $name_array[1];
			$last_name	 = $name_array[2];
			if(empty($last_name)){
				$last_name = $middle_name;
				$middle_name = '';
			}
		}
		if(!empty($city))
		{
			$fieldname = "city_c";
			$get_city_code = getdropdown($sessionID,$module,$city,$fieldname);
		}
		if(!empty($state))
		{
			$fieldname = "state_c";
			$get_state_code = getdropdown($sessionID,$module,$state,$fieldname);
		}
		if(!empty($pincode))
		{
			$fieldname = "postalcode_c";
			$get_postal_code = getdropdown($sessionID,$module,$pincode,$fieldname);
		}
		if(!empty($userType))
		{
			$fieldname = "user_type_c";
			$userType = getdropdown($sessionID,$module,$userType,$fieldname);
		}
		if(!empty($gateway))
		{
			$fieldname = "gateway_c";
			if($gateway == 'EXTERNALBO'){
				$gateway = 'Digital Marketing';
			}
			if(strpos($gateway,'-')!==false){
				$gateway_array = explode("-", $gateway);
				$gateway = $gateway_array[0];
			}
			$gateway = getdropdown($sessionID,$module,$gateway,$fieldname);
		}
		if($gateway == 'Corporate Channel'){
			$relatedCorporateAccount = $publisherName;
			$publisherName = '';
		}
		 $name_value_list = array(
					(!empty($salutation) ? array('name' => 'salutation','value' => $salutation) : ''),
					(!empty($first_name) ? array('name' => 'first_name','value' => trim($first_name)) : ''),
					(!empty($middle_name) ? array('name' => 'middle_name_c','value' => trim($middle_name)) : ''),
					(!empty($last_name) ? array('name' => 'last_name','value' => trim($last_name)) : ''),
					(!empty($emailID) ? array('name' => 'email1','value' => $emailID) : ''),
					(!empty($mobileNumber) ? array('name' => 'phone_mobile','value' => $mobileNumber) : ''),
					(!empty($uniqueCustomerCode) ? array('name' => 'unique_customer_code_c','value' => $uniqueCustomerCode) : ''),
					(!empty($address) ? array('name' => 'address_c','value' => $address) : ''),
					(!empty($city) ? array('name' => 'city_c','value' => $get_city_code) : ''),
					(!empty($state) ? array('name' => 'state_c','value' => $get_state_code) : ''),
					(!empty($pinCode) ? array('name' => 'postalcode_c','value' => $get_postal_code) : ''),
					(!empty($gateway) ? array('name' => 'gateway_c','value' => $gateway) : ''),
					(!empty($campaignType) ? array('name' => 'campaign_type_c','value' => $campaignType) : ''),
					(!empty($campaignSubType) ? array('name' => 'campaign_sub_type_c','value' => $campaignSubType) : ''),
					(!empty($relatedCorporateAccount) ? array('name' => 'related_corporate_account_c','value' => $relatedCorporateAccount) : ''),
					(!empty($relatedKioskAccount) ? array('name' => 'related_kiosk_account_c','value' => $relatedKioskAccount) : ''),
					(!empty($userType) ? array('name' => 'user_type_c','value' => $userType) : ''),
					(!empty($adoptionPercentage) ? array('name' => 'adoption_percentage_c','value' => $adoptionPercentage) : ''),
					(!empty($classificationOfTheAccountForPotential) ? array('name' => 'classification_accoun_c','value' => $classificationOfTheAccountForPotential) : ''),
					(!empty($publisherID) ? array('name' => 'publisher_id_c','value' => $publisherID) : ''),
					(!empty($publisherName) ? array('name' => 'publisher_name_c','value' => $publisherName) : ''),
					(!empty($userCreationDate) ? array('name' => 'date_entered','value' => $userCreationDate) : ''),
					(!empty($riskProfile) ? array('name' => 'risk_profiling_questions_c','value' => $riskProfile) : ''),
					(!empty($leadDate) ? array('name' => 'lead_generation_date_c','value' => $leadDate) : ''),
					(!empty($FirstCalledOn) ? array('name' => 'date_of_first_call_c','value' => $FirstCalledOn) : '0000-00-00 00:00:00'),
					(!empty($FirstDisposition) ? array('name' => 'status_of_first_call_c','value' => $FirstDisposition) : ''),
					(!empty($SecondCalledOn) ? array('name' => 'date_of_second_call_c','value' => $SecondCalledOn) : '0000-00-00 00:00:00'),
					(!empty($SecondDisposition) ? array('name' => 'status_of_second_call_c','value' => $SecondDisposition) : ''),
					(!empty($ThirdCalledOn) ? array('name' => 'date_of_third_call_c','value' => $ThirdCalledOn) : '0000-00-00 00:00:00'),
					(!empty($ThirdDisposition) ? array('name' => 'status_of_third_call_c','value' => $ThirdDisposition) : ''),
					(!empty($DateOfValidation) ? array('name' => 'date_of_validation_c','value' => $DateOfValidation) : ''),
					(!empty($Lastadvisor) ? array('name' => 'validation_exe_assigned_c','value' => $Lastadvisor) : ''),
					(!empty($Age) ? array('name' => 'age_of_the_user_c','value' => $Age) : ''),
					(!empty($Age) ? array('name' => 'age_c','value' => $Age) : ''),
					(!empty($AgreeToAssignAdvisor) ? array('name' => 'agreed_to_assign_c','value' => $AgreeToAssignAdvisor) : ''),
					(!empty($PrefferedDateToCall) ? array('name' => 'preferred_date_to_call_c','value' => $PrefferedDateToCall) : ''),
					(!empty($PrefferedTimeToCall) ? array('name' => 'preferred_date_to_time_c','value' => $PrefferedTimeToCall) : ''),
					(!empty($Gender) ? array('name' => 'gender_c','value' => $Gender) : ''),
					(!empty($comments) ? array('name' => 'comments_c','value' => $comments) : ''),
					(!empty($lastDisposition) ? array('name' => 'final_disposition_c','value' => $lastDisposition) : ''),
					(!empty($batchID) ? array('name' => 'batch_id_c','value' => $batchID) : ''),
				);
				/*************************check unique code exists or not******************************/
				if(!empty($uniqueCustomerCode)){
					$get_unique_code_query = $db->query("select id from contacts join contacts_cstm where id=id_c and deleted=0 and unique_customer_code_c = '$uniqueCustomerCode'");
					if($get_unique_code_query->num_rows == 0){
						$name_value_list[] = array('name' => 'disposition_c','value' => '');
						$user_creation = create_user($sessionID,$module,$name_value_list);
						$status = "User Created Successfully! - $name";
						$logMessage = "\n\nScheduler Result at $timestamp :- $status";
						fwrite($schedulerHandle, $logMessage);
					}else{
						$row_unique_code = $db->fetchByAssoc($get_unique_code_query);
						$name_value_list[] = array('name' => 'id','value' => $row_unique_code['id']);
						$user_creation = create_user($sessionID,$module,$name_value_list);
						$status = "User Updated Successfully! - $name";
						$logMessage = "\n\nScheduler Result at $timestamp :- $status";
						fwrite($schedulerHandle, $logMessage);
					}
				}else{
				}
				$responseData[$i]['batchID'] = $batchID;
				$responseData[$i]['uniqueCustomerCode'] = $uniqueCustomerCode;
			
				$i++;			
	}
	send_response_data($responseData);
	return true;
}

function send_response_data($responseData){
	global $sugar_config; 
$postData = json_encode($responseData);

$url = $sugar_config['updateusersstatus'];
/***************log file***************************/
$schedulerLogFile = '/var/www/html/crm/custom/modules/Schedulers/user_response_log.txt';  
$schedulerHandle = fopen($schedulerLogFile, 'a');
$timestamp = date('Y-m-d H:i:s',strtotime('+5 hours +30 minutes', strtotime('now')));


$ch = curl_init($url);
curl_setopt($ch, CURLOPT_POST, 1);
curl_setopt($ch, CURLOPT_POSTFIELDS, $postData);
curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
curl_setopt($ch,CURLOPT_HTTPHEADER, array('Authorization:Crypto 4IilG3pP+ESLwADK0b4TboG2Okn54Fixu4dW9P7ayHpUSXgNHpz11CdZP5qXK0XI',
											'Content-Type: application/json',
											'Content-Length: ' . strlen($postData)));
$result = curl_exec($ch);
curl_close($ch);
$GetUserDataforCRM = json_decode($result, true);

 $logArray = print_r($GetUserDataforCRM, true);
        $logMessage = "\n\nScheduler UpdateUserStatus API at $timestamp :-\n$logArray";
        fwrite($schedulerHandle, $logMessage);
 $logArray = print_r($postData, true);
        $logMessage = "\n\nScheduler UpdateUser API response DATA at $timestamp :-\n$logArray";
        fwrite($schedulerHandle, $logMessage);
}

//contact creation
function create_user($sessionID,$module,$name_value_list){		
	$createuser = array(
                    "session" => $sessionID,
                    "module_name" => $module,
                    "name_value_list" => $name_value_list,
                );
              $setuserEntryID = call("set_entry", $createuser);
			  return $setuserEntryID;
}
//function to make cURL request
function call($method, $parameters)
{
		global $sugar_config;
		ob_start();
		
		$curl_request = curl_init();
		$curlURL = $sugar_config["webservice_url"];
        curl_setopt($curl_request, CURLOPT_URL, $curlURL);
        curl_setopt($curl_request, CURLOPT_POST, 1);
        curl_setopt($curl_request, CURLOPT_HTTP_VERSION, CURL_HTTP_VERSION_1_0);
        curl_setopt($curl_request, CURLOPT_HEADER, 1);
        curl_setopt($curl_request, CURLOPT_SSL_VERIFYPEER, 0);
        curl_setopt($curl_request, CURLOPT_RETURNTRANSFER, 1);
        curl_setopt($curl_request, CURLOPT_FOLLOWLOCATION, 0);

        $jsonEncodedData = json_encode($parameters);

        $post = array(
             "method" => $method,
             "input_type" => "JSON",
             "response_type" => "JSON",
             "rest_data" => $jsonEncodedData
        );

        curl_setopt($curl_request, CURLOPT_POSTFIELDS, $post);
        $result = curl_exec($curl_request);
        curl_close($curl_request);

        $result = explode("\r\n\r\n", $result, 2);
        $response = json_decode($result[1]);
        ob_end_flush();

        return $response;
}
//login ------------------------------     
function login($username,$password){
    $login_parameters = array(
         "user_auth" => array(
              "user_name" => $username,
              "password" => md5($password),
              "version" => "1"
         ),
         "application_name" => "RestTest",
         "name_value_list" => array(),
    );

    $login_result = call("login", $login_parameters);
    return $login_result;
}

function getdropdown($sessionID,$module, $needle,$fieldname) {
  
	
    $getContactFields = array(
        'session' => $sessionID,
        'module_name' => $module,
    );
    $getdropdownresult = call('get_module_fields', $getContactFields)->module_fields;

    $getdropdownvalues = $getdropdownresult->$fieldname->options;

    foreach ($getdropdownvalues as $getdropdownKey => $getdropdownValue) {
		if(!empty($getdropdownValue->value))
		{
			if (strpos(strtolower($getdropdownValue->value), strtolower($needle)) !== false || strpos(strtolower($needle), strtolower($getdropdownValue->value)) !== false) {
				return $getdropdownKey;
			} else {
				$return = '';
			}
		}
		else
		{
			$return = '';
		}
    }

    return $return;
}
/****************************************Reassignment Data _ START************************************/
function ReassignmentData(){
	global $db, $app_list_strings,$sugar_config;
	$target = $sugar_config['users_assignment_target']; 		
	//If the Agent is failed to meet Target, Re Assign users back to Poorti
	$db->query("UPDATE contacts c JOIN contacts_cstm cc ON cc.id_c = c.id SET c.assigned_user_id =  '68ec618f-d98b-8f63-e0ad-584e574eabc7' WHERE c.assigned_user_id <>  '68ec618f-d98b-8f63-e0ad-584e574eabc7' AND cc.sales_stage_c =  'User' AND cc.disposition_c =  '' AND c.deleted =0 AND cc.gateway_c!='Corporate Channel'");					
	//Handle Holidays list and Saturday and Sunday
	$date1            = strtotime(date("Y-m-d"));
	$day              = date("D");
	$holiday_query    = "select holiday_date from scrm_holidays_list where deleted = 0 order by holiday_date";
	$holiday_result   = $db->query($holiday_query);
	
	$holiday_calender = array();
	while ($holiday_row = $db->fetchByAssoc($holiday_result)) {
		$holiday_date       = $holiday_row['holiday_date'];
		$holiday_calender[] = strtotime($holiday_date);
	}	
	if ($day == 'Sat' || $day == 'Sun' || in_array($date1, $holiday_calender)) {
		return true;
	}
	//End Holiday list caculation
	/*********************fetch the contacts data which are assigned to Poorti**************************/
	$fetch_contacts_data = $db->query("select contacts.id,contacts_cstm.gateway_c from contacts join contacts_cstm on contacts.id=contacts_cstm.id_c where contacts.assigned_user_id='68ec618f-d98b-8f63-e0ad-584e574eabc7' and contacts.created_by='1' and contacts_cstm.gateway_c!='' and contacts_cstm.gateway_c!='Corporate Channel' and contacts.deleted=0 order by date_entered desc");
	while($result_contacts_data = $db->fetchByAssoc($fetch_contacts_data)){
		 $contact_id = $result_contacts_data['id'];
		 $contact_gateway = $result_contacts_data['gateway_c'];
		 $query = "SELECT su.user_id FROM securitygroups sg JOIN securitygroups_users su ON su.securitygroup_id = sg.id JOIN users u ON su.user_id=u.id JOIN users_cstm uc ON u.id=uc.id_c AND su.deleted =0 WHERE sg.name = '$contact_gateway' AND sg.deleted =0 AND su.deleted=0 AND u.deleted=0 AND uc.gateway_assigned_c='1' AND u.status='Active'";
		 $result = $db->query($query);		
		 $users_count = $result->num_rows;
		 if($users_count > 0){
			$assigned_array = array();
			while($users_row = $db->fetchByAssoc($result)){
				$assigned_array[] = $users_row['user_id'];
			} 
			$today = gmdate('Y-m-d');
			$assigned_user_count = array();
			$assigned_user_contacts_count = array();
			for($i=0;$i<sizeof($assigned_array);$i++){
				$records_query = "SELECT count(c.id) as count FROM contacts c LEFT JOIN contacts_cstm cc ON c.id = cc.id_c	WHERE  cc.sales_stage_c	IN ('User', 'Suspect', 'Prospect', 'Hot Prospect') AND c.deleted =0 AND c.assigned_user_id = '".$assigned_array[$i]."' AND date(cc.user_allocation_date_c)='$today'";	
			//	$GLOBALS['log']->fatal($records_query);
				$records_result = $db->query($records_query);
				$row_records_result = $db->fetchByAssoc($records_result);
				//$assigned_user_contacts_count[$row_records_result['assigned_user_id']] = $row_records_result['count'];
				$assigned_user_count[] = $row_records_result['count'];
				$assigned_user_contacts_count[$row_records_result['count']] = $assigned_array[$i];
			}
			//$GLOBALS['log']->fatal(print_r($assigned_user_contacts_count,true)."user assignment testing");
			$get_least_count = min($assigned_user_count);
			if($get_least_count < $target){
				$assigned_user_id = $assigned_user_contacts_count[$get_least_count];
				if(empty($assigned_user_id)){
					$assigned_user_id=$assigned_array[array_rand($assigned_array)];
				}
				$user_allocation_date_c = date("Y-m-d H:i:s");
		
				//echo $user_allocation_date_c = date("Y-m-d H:i:s", strtotime("+5 hours, +30 minutes", strtotime($user_allocation_date_c)));
				$db->query("update contacts join contacts_cstm on contacts.id=contacts_cstm.id_c set contacts.assigned_user_id='$assigned_user_id',contacts_cstm.user_allocation_date_c='$user_allocation_date_c' where contacts.id='$contact_id' and contacts.deleted=0");
				
				$db->query("update contacts join contacts_cstm on contacts.id=contacts_cstm.id_c set contacts_cstm.allocated_time_c='$user_allocation_date_c' where contacts.id='$contact_id' and contacts.deleted=0 and contacts_cstm.allocated_time_c IS NULL");
				
				
				$gateway = $GLOBALS['app_list_strings']['gateway_list'][$result_contacts_data['gateway_c']];
				/***********fetch securitygroup id from securitygroups*******************/
				$fetch_group_id = $db->query("select id from securitygroups where deleted=0 and name='$gateway'");
				$row_group_id = $db->fetchByAssoc($fetch_group_id);
				$group_id = $row_group_id['id'];
			
				/***************adding group to contacts**************/
				$add_groups = "insert into securitygroups_records(id,securitygroup_id,record_id,module,date_modified,deleted) values( UUID(),'$group_id','$contact_id','Contacts',NOW(),0)";
				$db->query($add_groups);
			}else{
				$db->query("UPDATE contacts c  SET c.assigned_user_id =  '68ec618f-d98b-8f63-e0ad-584e574eabc7' WHERE  c.deleted =0 AND c.id='$contact_id' and c.assigned_user_id <>  '68ec618f-d98b-8f63-e0ad-584e574eabc7' ");
			}
		}
		

				//exit; 
		}
		return true; 
}
/****************************************Reassignment Data _ END************************************/
/******************************************User Productivity*****************************************/
function UserProductivity(){
	global $db;
	$today = date('Y-m-d 00:00:00');
	$today_date = date('Y-m-d H:i:s',strtotime('-5 hours -30 minutes', strtotime($today)));
	$fetch_contacts_data = $db->query("SELECT count( c.id ) AS count, c.assigned_user_id, cc.user_allocation_date_c FROM contacts c JOIN contacts_cstm cc ON cc.id_c = c.id WHERE c.deleted =0 AND cc.user_allocation_date_c >= '$today_date' AND c.assigned_user_id<>'' GROUP BY assigned_user_id");
	$assigned_array = array();
	while($result_contact_data = $db->fetchByAssoc($fetch_contacts_data)){
		 $assigned_array[$result_contact_data['assigned_user_id']][date('Y-m-d',strtotime($result_contact_data['user_allocation_date_c']))]['allocated_count'] = $result_contact_data['count'];
	}
	$fetch_modified_data = "SELECT COUNT( c.id ) AS count, c.assigned_user_id, c.date_modified FROM contacts c JOIN contacts_cstm cc ON cc.id_c = c.id WHERE c.deleted =0 AND DATE( c.date_modified ) =  '$today' AND DATE(cc.user_allocation_date_c) = '$today' AND cc.disposition_c <>  '' GROUP BY assigned_user_id";
	$result_modified_data = $db->query($fetch_modified_data);
	while($row_modified_data = $db->fetchByAssoc($result_modified_data)){
		$assigned_array[$row_modified_data['assigned_user_id']][date('Y-m-d',strtotime($row_modified_data['date_modified']))]['modified_count'] = $row_modified_data['count'];
	}
	foreach($assigned_array as $id=>$value){
		foreach($value as $date=>$count){
			$not_modified = $count['allocated_count'] - $count['modified_count'];
			$modified = $count['modified_count'];
			if(empty($modified)){
				$modified = '0';
			}
			$allocated = $count['allocated_count'];
			$fetch_user_data = "select id from scrm_user_assignment_rule where assigned_user_id='$id' and allocated_date='$date' and deleted=0";
			$result_user_data = $db->query($fetch_user_data);
			$row_user_data = $db->fetchByAssoc($result_user_data);
			$user_assignment_id = $row_user_data['id'];
			if(!empty($user_assignment_id)){
				$db->query("UPDATE scrm_user_assignment_rule set allocated_date='$date',assigned_count='$allocated',modified_count='$modified',not_modfied_count='$not_modified' where id='$user_assignment_id' and deleted=0");
			}else{
			$db->query("INSERT INTO `scrm_user_assignment_rule`(`id`, `name`, `date_entered`, `date_modified`, `modified_user_id`, `created_by`, `description`, `deleted`, `assigned_user_id`,`allocated_date`, `assigned_count`, `modified_count`, `not_modfied_count`) VALUES (UUID(),'$date - $allocated',now(),now(),1,1,'',0,'$id','$date','$allocated','$modified','$not_modified')");
			}	
		}
	}
	return true;
}
/*****************************************User Productivity - END ***********************************/
/****************************************Get States****************************************/
function GetState(){
	global $db, $sugar_config;
	$username = $sugar_config["webservice_username"];
	$password = $sugar_config["webservice_password"];
	$url = $sugar_config["getstate"];
	$ch = curl_init($url);
	curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "GET");
	curl_setopt($ch, CURLOPT_POSTFIELDS, $postData);
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
	curl_setopt($ch,CURLOPT_HTTPHEADER, array('Authorization:Crypto 4IilG3pP+ESLwADK0b4TboG2Okn54Fixu4dW9P7ayHpUSXgNHpz11CdZP5qXK0XI',
											'Content-Type: application/json',
											'Content-Length: ' . strlen($postData)));
	$result = curl_exec($ch);
	curl_close($ch);
	$GetUserDataforCRM = json_decode($result, true);
	$GetUserData = $GetUserDataforCRM['data'];
	/******truncate the table*****************/
	$db->query("DELETE FROM state");
	foreach($GetUserData as $GetUserSet){
		$db->query("INSERT INTO state (id,name) VALUES ('".$GetUserSet['id']."','".$GetUserSet['name']."')");
	}
	return true;
}
/****************************************Get City****************************************/
function GetCity(){
	global $db, $sugar_config;
	$username = $sugar_config["webservice_username"];
	$password = $sugar_config["webservice_password"];
	$url = $sugar_config["getcity"];
	$ch = curl_init($url);
	curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "GET");
	curl_setopt($ch, CURLOPT_POSTFIELDS, $postData);
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
	curl_setopt($ch,CURLOPT_HTTPHEADER, array('Authorization:Crypto 4IilG3pP+ESLwADK0b4TboG2Okn54Fixu4dW9P7ayHpUSXgNHpz11CdZP5qXK0XI',
											'Content-Type: application/json',
											'Content-Length: ' . strlen($postData)));
	$result = curl_exec($ch);
	curl_close($ch);
	$GetUserDataforCRM = json_decode($result, true);
	$GetUserData = $GetUserDataforCRM['data'];
	/******truncate the table*****************/
	$db->query("DELETE FROM city");
	foreach($GetUserData as $GetUserSet){
		$db->query("INSERT INTO city (id,name) VALUES ('".$GetUserSet['stateID'].'_'.$GetUserSet['id']."','".$GetUserSet['name']."')");
	}
	return true;

}
/****************************************Get pincode****************************************/
function GetPincode(){
	global $db, $sugar_config;
	$username = $sugar_config["webservice_username"];
	$password = $sugar_config["webservice_password"];
	$url = $sugar_config["getpostalcode"];
	$ch = curl_init($url);
	curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "GET");
	curl_setopt($ch, CURLOPT_POSTFIELDS, $postData);
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
	curl_setopt($ch,CURLOPT_HTTPHEADER, array('Authorization:Crypto 4IilG3pP+ESLwADK0b4TboG2Okn54Fixu4dW9P7ayHpUSXgNHpz11CdZP5qXK0XI',
											'Content-Type: application/json',
											'Content-Length: ' . strlen($postData)));
	$result = curl_exec($ch);
	curl_close($ch);
	$GetUserDataforCRM = json_decode($result, true);
	$GetUserData = $GetUserDataforCRM['data'];
	$postal_code = array(''=>'',);
	foreach($GetUserData as $GetUserSet){
		$postal_code[$GetUserSet['stateID'].'_'.$GetUserSet['cityID'].'_'.$GetUserSet['id']]=$GetUserSet['postalCode'];
	}
	/******truncate the table*****************/
	$db->query("DELETE FROM pincode");
	foreach($GetUserData as $GetUserSet){
		$db->query("INSERT INTO pincode (id,name) VALUES ('".$GetUserSet['stateID'].'_'.$GetUserSet['cityID'].'_'.$GetUserSet['id']."','".$GetUserSet['postalCode']."')");
	}
	return true;
}
/********************************Active Users*************************************************/
function Active_Users(){
	global $db,$sugar_config;
	$username = $sugar_config["webservice_username"];
	$password = $sugar_config["webservice_password"];
	/***************log file***************************/
	$schedulerLogFile = '/var/www/html/crm/custom/modules/Schedulers/user_creation_log.txt';  
	$schedulerHandle = fopen($schedulerLogFile, 'a');
	$timestamp = date('Y-m-d H:i:s',strtotime('+5 hours +30 minutes', strtotime('now')));
	$status = "CRON Run Successful! - Active Users";
	$logMessage = "\n\nScheduler Result at $timestamp :- $status";
	fwrite($schedulerHandle, $logMessage);
	
	/*************curl for getting user data from 3rd party********************/
	$url = $sugar_config['getactiveusers'];
	$ch = curl_init($url);
	curl_setopt($ch, CURLOPT_CUSTOMREQUEST, "GET");
	curl_setopt($ch, CURLOPT_POSTFIELDS, $postData);
	curl_setopt($ch, CURLOPT_RETURNTRANSFER, true);
	curl_setopt($ch,CURLOPT_HTTPHEADER, array('Authorization:Crypto 4IilG3pP+ESLwADK0b4TboG2Okn54Fixu4dW9P7ayHpUSXgNHpz11CdZP5qXK0XI',
											'Content-Type: application/json',
											'Content-Length: ' . strlen($postData)));
	$result = curl_exec($ch);
	curl_close($ch);
	$GetUserDataforCRM = json_decode($result, true);
	$GetUserData = $GetUserDataforCRM['data']['activeuserslist'];
	
	if (empty($GetUserData)) 
	{
	   $GetUserDataCRMStatus = array(
            'notice' => 'Returned empty data array.'
        );
         //update user status
		$db->query("Update contacts_cstm set online_activity_status_c='Inactive' where online_activity_status_c='Active'");
		$db->query("Update alerts set deleted='1' where deleted='0'");
        $logArray = print_r($GetUserDataCRMStatus, true);
        $logMessage = "\n\nScheduler Result at $timestamp :-\n$logArray";
        fwrite($schedulerHandle, $logMessage);
        return true;
    }
	
	$result_customer_code_array = $db->query("select contacts_cstm.unique_customer_code_c from contacts join contacts_cstm on contacts.id=contacts_cstm.id_c where contacts_cstm.online_activity_status_c='Active'");
	while($row_customer_code = $db->fetchByAssoc($result_customer_code_array))
	{
		$uniqueCustomerCode_array_crm[] = $row_customer_code['unique_customer_code_c'];
	}

	for($i=0;$i<sizeof($uniqueCustomerCode_array_crm);$i++)
	{
		//update user status
		$db->query("Update contacts_cstm set online_activity_status_c='Inactive' where unique_customer_code_c='".$uniqueCustomerCode_array_crm[$i]."' and online_activity_status_c='Active'");
		//$db->query("Update alerts set deleted='1' where deleted='0' and name='Active User Code - '".$uniqueCustomerCode_array_crm[$i]."'");
		$db->query("Update alerts set deleted='1' where deleted='0'");
	}
	foreach($GetUserData as $GetUserSet){
		$uniqueCustomerCode = $GetUserSet["uniqueCustomerCode"];
		if(!empty($uniqueCustomerCode)){
				//fetch information based on unique customer code
			$fetch_contact_data = $db->query("select contacts.id,contacts.assigned_user_id from contacts join contacts_cstm on contacts.id=contacts_cstm.id_c where contacts.deleted=0 and contacts_cstm.unique_customer_code_c='$uniqueCustomerCode'");
			$result_contact_data = $db->fetchByAssoc($fetch_contact_data);
			$contact_id = $result_contact_data['id'];
			$assigned_user = $result_contact_data['assigned_user_id'];
			
			//popup reminder to user
			$insert_popup = "INSERT INTO alerts  (id,name,date_entered,date_modified,modified_user_id,created_by,description,deleted,assigned_user_id,is_read,target_module,type,url_redirect) VALUES (UUID(),'Active User Code - $uniqueCustomerCode',NOW(),NOW(),'1','1','Kindly touch with user ASAP .','0','$assigned_user','0','Contacts','info','index.php?action=DetailView&module=Contacts&record=$contact_id')";
			$insert_popup_result = $db->query($insert_popup);
			
			//update user status
			$db->query("Update contacts_cstm set online_activity_status_c='Active' where id_c='$contact_id'");
			
			$status = "Active Users - $uniqueCustomerCode";
			$logMessage = "\n\nScheduler Result at $timestamp :- $status";
			fwrite($schedulerHandle, $logMessage);
		}
		}
	return true;	
}
function Case_Escalation(){
	
global $db,$body,$body_main,$app_list_strings;
$escalationid="";
date_default_timezone_set('UTC');

global $sugar_config;
$schedulerLogFile = '/var/www/html/crm/custom/modules/Schedulers/scheduler_log.txt';  
$schedulerHandle = fopen($schedulerLogFile, 'a');
$timestamp = date('Y-m-d H:i:s',strtotime('+5 hours +30 minutes', strtotime('now')));
 
if(!empty($GLOBALS['app_list_strings']['teams_list']))
{
	global $db;
	foreach($GLOBALS['app_list_strings']['teams_list'] as $key => $val)
    {
		$teams=$key;
		//fetching each escalation matrix for each team
		$query_level_minutes="SELECT escalation_minutes_level1_c,escalation_minutes_level2_c,escalation_minutes_level3_c,id,email_template_1_c,email_template_2_c,email_template_3_c,user_id1_c,user_id2_c,user_id3_c FROM scrm_escalation_matrix INNER JOIN scrm_escalation_matrix_cstm ON scrm_escalation_matrix.id=scrm_escalation_matrix_cstm.id_c WHERE teams_c='$teams' AND deleted='0'";
		$logMessage = "\n\nScheduler Result at $timestamp :- $query_level_minutes";
		fwrite($schedulerHandle, $logMessage);
		$result_level_minutes=$db->query($query_level_minutes);
		$row_level_minutes=$db->fetchByAssoc($result_level_minutes);
		$escalationminutes_level1=$row_level_minutes['escalation_minutes_level1_c'];
		$escalationminutes_level2=$row_level_minutes['escalation_minutes_level2_c'];
		$escalationminutes_level3=$row_level_minutes['escalation_minutes_level3_c'];
		$email_template_1=$row_level_minutes['email_template_1_c'];
		$email_template_2=$row_level_minutes['email_template_2_c'];
		$email_template_3=$row_level_minutes['email_template_3_c'];
		$escalated_user_level1=$row_level_minutes['user_id1_c'];
		$escalated_user_level2=$row_level_minutes['user_id2_c'];
		$escalated_user_level3=$row_level_minutes['user_id3_c'];
		$escalationid=$row_level_minutes['id'];
		//fetching case details from cases
		$today=gmdate('Y-m-d');
		$query_dateentered="select cases.date_entered,cases.id,cases.assigned_user_id,cases.name,cases_cstm.escalation_level_1_checkbox_c,cases_cstm.escalation_level_2_checkbox_c,cases_cstm.escalation_level_3_checkbox_c,cases_cstm.assigned_time_c,cases_cstm.pending_counter_c as timer from cases inner join cases_cstm on cases.id=cases_cstm.id_c inner join securitygroups_records on securitygroups_records.record_id=cases.id where cases.deleted='0' and cases.state='Open' and securitygroups_records.securitygroup_id='$teams' and securitygroups_records.deleted='0' and cases_cstm.ticket_counter_c <= 8";
		$result_dateentered=$db->query($query_dateentered);
		while($row_dateentered=$db->fetchByAssoc($result_dateentered)){
			$case_id=$row_dateentered['id'];
			//$datecreated=date('Y-m-d H:i:s',strtotime('+5 hours +30 minutes', $row_dateentered['date_entered']));
			$datecreated = $row_dateentered['assigned_time_c'];
			$case_assigned_user = $row_dateentered['assigned_user_id'];
			$case_subject = $row_dateentered['name'];
			$escalationminutes_level1_checkbox=$row_dateentered['escalation_level_1_checkbox_c'];
			$escalationminutes_level2_checkbox=$row_dateentered['escalation_level_2_checkbox_c'];
			$escalationminutes_level3_checkbox=$row_dateentered['escalation_level_3_checkbox_c'];
			$today_date= date('Y-m-d H:i:s');
			$timer = $row_dateentered['timer'];
			//~ $seconds = strtotime($today_date) - strtotime($datecreated);
			//~ $days    = floor($seconds / 86400);
			//~ $totalhours = floor(($seconds - ($days * 86400) - ($hours * 3600))/60);
			//~ echo $totalhours = floor($totalhours/60);
			$date1             = new DateTime($datecreated);            
			$date2             = new DateTime($today_date);            
			$diff              = $date2->diff($date1);            
			$totalhours             = $diff->h;            
			//$minutes           = $diff->i;
			if(!empty($timer))
			{
				$totalhours = $totalhours + $timer; 
			}
			// echo $totalhours;exit;
			$db->query("update cases_cstm set ticket_counter_c='$totalhours' where id_c='$case_id'");
			if(!empty($escalationminutes_level1) && !empty($escalationminutes_level2) && !empty($escalationminutes_level3)){
				if(($totalhours == $escalationminutes_level1) && ($escalationminutes_level1_checkbox == 1)){
					//echo 'noresha';
					$status = "CRON Run Successful!-$totalhours ";
					$logMessage = "\n\nScheduler Result at $timestamp :- $status";
					fwrite($schedulerHandle, $logMessage);

					//fetching user details - supervisor,manage
					$fetch_reports_to_query = "select * from users where id ='$case_assigned_user' and deleted='0'";
					$fetch_reports_to_result=$db->query($fetch_reports_to_query);
					$fetch_reports_to_row = $db->fetchByAssoc($fetch_reports_to_result);
					$assignedusername_old = $fetch_reports_to_row['first_name'].' '.$fetch_reports_to_row['last_name'];
							
					$status = "Level 1 - Reports to user - $escalated_user_level1";
					$logMessage = "\n\nScheduler Result at $timestamp :- $status";
					fwrite($schedulerHandle, $logMessage);

							
					$update_case_assigned_user = "update cases set assigned_user_id='$escalated_user_level1' where deleted='0' and id='$case_id'";
					$update_case_assigned_user_result = $db->query($update_case_assigned_user);
										
					//fetch user details
					$select_assigned_user = "SELECT * from users where id='$escalated_user_level1' and deleted='0'";
					$select_assigned_result = $db->query($select_assigned_user);
					$select_assigned_row  = $db->fetchByAssoc($select_assigned_result);
					$assignedusername = $select_assigned_row['first_name'].' '.$select_assigned_row['last_name'];
							
					//getting assigned user email
					$select_query = "SELECT ea.email_address  as email FROM email_addr_bean_rel eabr JOIN email_addresses ea ON eabr.email_address_id = ea.id WHERE eabr.bean_id = '$escalated_user_level1' and eabr.deleted='0'";
					$select_result = $db->query($select_query);
					$select_row = $db->fetchByAssoc($select_result);
					$assignedemail= $select_row['email'];
					$status = "Level 1- Assigned user emails and name :$assignedusername-$assignedemail !";
					$logMessage = "\n\nScheduler Result at $timestamp :- $status";
					fwrite($schedulerHandle, $logMessage);														
					//fetching email template
					$emailtemplate_query="SELECT body_html,subject FROM email_templates WHERE id='$email_template_1'";
					$emailtemplate_result=$db->query($emailtemplate_query);
					$emailtemplate_row=$db->fetchByAssoc($emailtemplate_result);
					$body=$emailtemplate_row['body_html'];
					$subject=$emailtemplate_row['subject'];
					$needle = '$acase_';
					$matches = array_filter(str_word_count($body,1,'_$'),
					function($item) use ($needle) {
											//echo $item;
											return (levenshtein($item,$needle,1,1,0) == 0);
										}
									   );
							 foreach ($matches as $values) {
								$correctvariables=$values;
								$queryvariables=str_replace('$acase_',"",$correctvariables);
								$query_casevariables="SELECT $queryvariables FROM cases inner join cases_cstm on cases.id=cases_cstm.id_c where id='$case_id'";
								$result_casevariables=$db->query($query_casevariables);
								$row_casevariables=$db->fetchByAssoc($result_casevariables);
								$result_case=$row_casevariables[$queryvariables];
								
								$body= str_replace(array($correctvariables),array($result_case),$body);
								$body= str_replace('$sugarurl',$sugar_config['site_url'],$body);
								$body= str_replace('Open_New',$GLOBALS['app_list_strings']['case_status_dom'][$row_casevariables['status']],$body);
								$body= str_replace('$new_assigned_user_name',$assignedusername,$body);
								$body= str_replace('$old_assigned_user_name',$assignedusername_old,$body);
								$subject= str_replace(array($correctvariables),array($result_case),$subject);
							}
								//for sending email
								$sending_mail = mailInit($assignedemail, $assignedusername, $subject, $body);
								$status = "Email Status - $sending_mail";
								$logMessage = "\n\nScheduler Result at $timestamp :- $status";
								fwrite($schedulerHandle, $logMessage);
								if(!empty($update_case_assigned_user_result)){
										$recid=create_guid();
										$query = "INSERT INTO scrm_escalation_audit(id,name,date_entered,date_modified,modified_user_id,deleted) VALUES('$recid','$case_subject','$today_date','$today_date','$escalated_user_level1',0)";
										$result= $db->query($query);
										$query_cstm="INSERT INTO scrm_escalation_audit_cstm (id_c,level_c) VALUES ('$recid','Level1')";
										$result_cstm=$db->query($query_cstm);
										$idrelation=create_guid();
										$query_relation="INSERT INTO scrm_escalation_matrix_scrm_escalation_audit_1_c(id,date_modified,scrm_escala593_matrix_ida,scrm_escald34en_audit_idb) VALUES ('$idrelation','$today_date','$escalationid','$recid')";
										$result_relation=$db->query($query_relation);
										$caserelation = create_guid();
										$query_relation="INSERT INTO cases_scrm_escalation_audit_1_c(id,date_modified,cases_scrm_escalation_audit_1cases_ida,cases_scrm_escalation_audit_1scrm_escalation_audit_idb) VALUES ('$caserelation','$today_date','$case_id','$recid')";
										$result_relation=$db->query($query_relation);
									}
									
									$update_escalation_matrix_level1 = $db->query("update cases join cases_cstm on cases.id=cases_cstm.id_c set cases_cstm.escalation_level_1_checkbox_c=0,cases.status='Open_Escalated'  where cases.deleted=0 and cases_cstm.id_c='$case_id'");
									
					
						}
						 if(($totalhours == $escalationminutes_level2) && ($escalationminutes_level2_checkbox == 1)){
						//if((($totalhours >= ($escalationminutes_level2-0.01)) && ($totalhours <= ($escalationminutes_level2+0.01))) && ($escalationminutes_level2_checkbox == 1)){
							$GLOBALS['log']->fatal($totalhours."Level1 total minutes");
				$GLOBALS['log']->fatal($escalationminutes_level1."Level1 Escalation time");
$status = "CRON Run Successful!- $totalhours";
$logMessage = "\n\nScheduler Result at $timestamp :- $status";
fwrite($schedulerHandle, $logMessage);

							//fetching user details - supervisor,manager
							$fetch_reports_to_query = "select * from users where id ='$case_assigned_user' and deleted='0'";
							$fetch_reports_to_result=$db->query($fetch_reports_to_query);
							$fetch_reports_to_row = $db->fetchByAssoc($fetch_reports_to_result);
							$reports_to_supervisor = $fetch_reports_to_row['reports_to_id'];
							$assignedusername_old = $fetch_reports_to_row['first_name'].' '.$fetch_reports_to_row['last_name'];
/*
							if(empty($reports_to_supervisor)){
								$reports_to_supervisor = $case_assigned_user;
							}
							
*/
							
 $status = "Level 2 - Reports to user - $reports_to_supervisor";
  $logMessage = "\n\nScheduler Result at $timestamp :- $status";
  fwrite($schedulerHandle, $logMessage);
							
							$update_case_assigned_user = "update cases set assigned_user_id='$escalated_user_level2' where  deleted='0' and id='$case_id'";
							$update_case_assigned_user_result = $db->query($update_case_assigned_user);
										//fetch user details
						$select_assigned_user = "SELECT * from users where id='$escalated_user_level2' and deleted='0'";
						$select_assigned_result = $db->query($select_assigned_user);
						$select_assigned_row  = $db->fetchByAssoc($select_assigned_result);
						$assignedusername = $select_assigned_row['first_name'].' '.$select_assigned_row['last_name'];
							
							//getting assigned user email
							$select_query = "SELECT ea.email_address  as email FROM email_addr_bean_rel eabr JOIN email_addresses ea ON eabr.email_address_id = ea.id WHERE eabr.bean_id = '$escalated_user_level2' and eabr.deleted='0'";
							$select_result = $db->query($select_query);
							$select_row = $db->fetchByAssoc($select_result);
							$assignedemail= $select_row['email'];
$status = "Level 3- Assigned user emails and name :$assignedusername-$assignedemail !";
$logMessage = "\n\nScheduler Result at $timestamp :- $status";
fwrite($schedulerHandle, $logMessage);														
							//fetching email template
							$emailtemplate_query="SELECT body_html,subject FROM email_templates WHERE id='$email_template_2'";
							$emailtemplate_result=$db->query($emailtemplate_query);
							$emailtemplate_row=$db->fetchByAssoc($emailtemplate_result);
							$body=$emailtemplate_row['body_html'];
							$subject=$emailtemplate_row['subject'];
							$needle = '$acase_';
							$matches = array_filter(str_word_count($body,1,'_$'),
										function($item) use ($needle) {
											//echo $item;
											return (levenshtein($item,$needle,1,1,0) == 0);
										}
									   );
							 foreach ($matches as $values) {
								$correctvariables=$values;
								$queryvariables=str_replace('$acase_',"",$correctvariables);
								$query_casevariables="SELECT $queryvariables FROM cases inner join cases_cstm on cases.id=cases_cstm.id_c where id='$case_id'";
								$result_casevariables=$db->query($query_casevariables);
								$row_casevariables=$db->fetchByAssoc($result_casevariables);
								$result_case=$row_casevariables[$queryvariables];
/*
								$body= str_replace('$acase_assigned_user_name',$assignedusername,$body);
*/
								$body= str_replace(array($correctvariables),array($result_case),$body);
								$body= str_replace('$sugarurl',$sugar_config['site_url'],$body);
								$body= str_replace('Open_New',$GLOBALS['app_list_strings']['case_status_dom'][$row_casevariables['status']],$body);
								$body= str_replace('$new_assigned_user_name',$assignedusername,$body);
								$body= str_replace('$old_assigned_user_name',$assignedusername_old,$body);
								$subject= str_replace(array($correctvariables),array($result_case),$subject);
							}
								//for sending email
								$sending_mail = mailInit($assignedemail, $assignedusername, $subject, $body);
$status = "Email Status - $sending_mail";
$logMessage = "\n\nScheduler Result at $timestamp :- $status";
fwrite($schedulerHandle, $logMessage);
								
							if(!empty($update_case_assigned_user_result)){
										$recid=create_guid();
										$query = "INSERT INTO scrm_escalation_audit(id,name,date_entered,date_modified,modified_user_id,deleted) VALUES('$recid','$case_subject','$today_date','$today_date','$escalated_user_level2',0)";
										$result= $db->query($query);
										$query_cstm="INSERT INTO scrm_escalation_audit_cstm (id_c,level_c) VALUES ('$recid','Level2')";
										$result_cstm=$db->query($query_cstm);
										$idrelation=create_guid();
										$query_relation="INSERT INTO scrm_escalation_matrix_scrm_escalation_audit_1_c(id,date_modified,scrm_escala593_matrix_ida,scrm_escald34en_audit_idb) VALUES ('$idrelation','$today_date','$escalationid','$recid')";
										$result_relation=$db->query($query_relation);
										$caserelation = create_guid();
										$query_relation="INSERT INTO cases_scrm_escalation_audit_1_c(id,date_modified,cases_scrm_escalation_audit_1cases_ida,cases_scrm_escalation_audit_1scrm_escalation_audit_idb) VALUES ('$caserelation','$today_date','$case_id','$recid')";
										$result_relation=$db->query($query_relation);
									}
									$update_escalation_matrix_level2 = $db->query("update cases join cases_cstm on cases.id=cases_cstm.id_c set cases_cstm.escalation_level_2_checkbox_c=0,cases.status='Open_Escalated'  where cases.deleted=0 and cases_cstm.id_c='$case_id'");
						}
						if(($totalhours == $escalationminutes_level3) && ($escalationminutes_level3_checkbox == 1)){
						//if((($totalhours >= ($escalationminutes_level3-0.01)) && ($totalhours <= ($escalationminutes_level3+0.01))) && ($escalationminutes_level3_checkbox == 1)){
							$GLOBALS['log']->fatal($totalhours."Level1 total minutes");
				$GLOBALS['log']->fatal($escalationminutes_level1."Level1 Escalation time");
$status = "CRON Run Successful!- $totalhours";
$logMessage = "\n\nScheduler Result at $timestamp :- $status";
fwrite($schedulerHandle, $logMessage);

							//fetching user details - supervisor,manager
							$fetch_reports_to_query = "select * from users where id ='$case_assigned_user' and deleted='0'";
							$fetch_reports_to_result=$db->query($fetch_reports_to_query);
							$fetch_reports_to_row = $db->fetchByAssoc($fetch_reports_to_result);
							$reports_to_supervisor = $fetch_reports_to_row['reports_to_id'];
							$assignedusername_old = $fetch_reports_to_row['first_name'].' '.$fetch_reports_to_row['last_name'];
/*
							if(empty($reports_to_supervisor)){
								$reports_to_supervisor = $case_assigned_user;
							}
							
*/
							
 $status = "Level 3 - Reports to user - $escalated_user_level3";
  $logMessage = "\n\nScheduler Result at $timestamp :- $status";
  fwrite($schedulerHandle, $logMessage);
							
							$update_case_assigned_user = "update cases set assigned_user_id='$escalated_user_level3' where deleted='0' and id='$case_id'";
							$update_case_assigned_user_result = $db->query($update_case_assigned_user);
										//fetch user details
						$select_assigned_user = "SELECT * from users where id='$escalated_user_level3' and deleted='0'";
						$select_assigned_result = $db->query($select_assigned_user);
						$select_assigned_row  = $db->fetchByAssoc($select_assigned_result);
						$assignedusername = $select_assigned_row['first_name'].' '.$select_assigned_row['last_name'];
							
							//getting assigned user email
							$select_query = "SELECT ea.email_address  as email FROM email_addr_bean_rel eabr JOIN email_addresses ea ON eabr.email_address_id = ea.id WHERE eabr.bean_id = '$escalated_user_level3' and eabr.deleted='0'";
							$select_result = $db->query($select_query);
							$select_row = $db->fetchByAssoc($select_result);
							$assignedemail= $select_row['email'];
$status = "Level 3- Assigned user emails and name :$assignedusername-$assignedemail !";
$logMessage = "\n\nScheduler Result at $timestamp :- $status";
fwrite($schedulerHandle, $logMessage);														
							//fetching email template
							$emailtemplate_query="SELECT body_html,subject FROM email_templates WHERE id='$email_template_3'";
							$emailtemplate_result=$db->query($emailtemplate_query);
							$emailtemplate_row=$db->fetchByAssoc($emailtemplate_result);
							$body=$emailtemplate_row['body_html'];
							$subject=$emailtemplate_row['subject'];
							$needle = '$acase_';
							$matches = array_filter(str_word_count($body,1,'_$'),
										function($item) use ($needle) {
											//echo $item;
											return (levenshtein($item,$needle,1,1,0) == 0);
										}
									   );
							 foreach ($matches as $values) {
								$correctvariables=$values;
								$queryvariables=str_replace('$acase_',"",$correctvariables);
								$query_casevariables="SELECT $queryvariables FROM cases inner join cases_cstm on cases.id=cases_cstm.id_c where id='$case_id'";
								$result_casevariables=$db->query($query_casevariables);
								$row_casevariables=$db->fetchByAssoc($result_casevariables);
								$result_case=$row_casevariables[$queryvariables];
/*
								$body= str_replace('$acase_assigned_user_name',$assignedusername,$body);
*/
								$body= str_replace(array($correctvariables),array($result_case),$body);
								$body= str_replace('$sugarurl',$sugar_config['site_url'],$body);
								$body= str_replace('Open_New',$GLOBALS['app_list_strings']['case_status_dom'][$row_casevariables['status']],$body);
								$body= str_replace('$new_assigned_user_name',$assignedusername,$body);
								$body= str_replace('$old_assigned_user_name',$assignedusername_old,$body);
								$subject= str_replace(array($correctvariables),array($result_case),$subject);
							}
								//for sending email
								$sending_mail = mailInit($assignedemail, $assignedusername, $subject, $body);
$status = "Email Status - $sending_mail";
$logMessage = "\n\nScheduler Result at $timestamp :- $status";
fwrite($schedulerHandle, $logMessage);
								
							if(!empty($update_case_assigned_user_result)){
										$recid=create_guid();
										$query = "INSERT INTO scrm_escalation_audit(id,name,date_entered,date_modified,modified_user_id,deleted) VALUES('$recid','$case_subject','$today_date','$today_date','$escalated_user_level3',0)";
										$result= $db->query($query);
										$query_cstm="INSERT INTO scrm_escalation_audit_cstm (id_c,level_c) VALUES ('$recid','Level3')";
										$result_cstm=$db->query($query_cstm);
										$idrelation=create_guid();
										$query_relation="INSERT INTO scrm_escalation_matrix_scrm_escalation_audit_1_c(id,date_modified,scrm_escala593_matrix_ida,scrm_escald34en_audit_idb) VALUES ('$idrelation','$today_date','$escalationid','$recid')";
										$result_relation=$db->query($query_relation);
										$caserelation = create_guid();
										$query_relation="INSERT INTO cases_scrm_escalation_audit_1_c(id,date_modified,cases_scrm_escalation_audit_1cases_ida,cases_scrm_escalation_audit_1scrm_escalation_audit_idb) VALUES ('$caserelation','$today_date','$case_id','$recid')";
										$result_relation=$db->query($query_relation);
									}
									$update_escalation_matrix_level2 = $db->query("update cases join cases_cstm on cases.id=cases_cstm.id_c set cases_cstm.escalation_level_3_checkbox_c=0,cases.status='Open_Escalated'  where cases.deleted=0 and cases_cstm.id_c='$case_id'");
		}
	}
	}
}
}
return "SUCCESS";
}
/********************setuptimer escalation*************************/
function setuptimer_escalation(){
	global $db;
	$query = "select id,ticket_counter_c as counter from cases join cases_cstm on id=id_c where deleted=0 and ticket_counter_c <= 8 and state='Open'";
	$result = $db->query($query);
	while($row = $db->fetchByAssoc($result)){
		$case_id = $row['id'];
		$ticket_counter = $row['counter'];
		/**********tickets are in pending status***************/
		$datetime = new DateTime('tomorrow');
		$nextdate = $datetime->format('Y-m-d 10:00:00');		
		$week_day = date('w',strtotime('+5 hours +30 minutes', strtotime($nextdate)));
		if($week_day==6){
			$nextdate = date('Y-m-d H:i:s',strtotime(' + 2 day', strtotime($nextdate)));			
		}else if($week_day == 0){
			$nextdate = date('Y-m-d H:i:s',strtotime(' + 1 day', strtotime($nextdate)));	
		}
		$check_next_day = date('Y-m-d H:i:s',strtotime('-5 hours -30 minutes',strtotime($nextdate)));
		$update_ticket_counter = $db->query("update cases_cstm set assigned_time_c='$check_next_day',pending_counter_c='$ticket_counter' where id_c='$case_id'");
	
	}
	return true;
}
/***********************END****************************************/
function mailInit($to, $toName, $subject, $body) {
    //~ // include Email class
    include_once('modules/Administration/Administration.php');
    include_once('include/SugarPHPMailer.php');
    include_once('include/utils/db_utils.php'); // for from_html function
    
    $emailObj = new Email(); 
	$defaults = $emailObj->getSystemDefaultEmail(); 
		
	$mail = new SugarPHPMailer(); 
	$mail->setMailerForSystem(); 
	$mail->From = $defaults['email']; 
	$mail->FromName = $defaults['name']; 
    $mail->ClearAllRecipients();
    $mail->ClearReplyTos();
    // Add recipient
    $mail->AddAddress($to,$toName);
    // Add subject
	$mail->Subject = $subject;
    // Add mail content
	$mail->isHTML(true); // set to true if content has html tags
	$mail->Body = from_html($body);
   
    //Send mail, log if there is error
	if ($mail->Send()) {
        return 'SUCCESS';
	} else {
     $GLOBALS['log']->fatal("ERROR: Mail sending failed!");
        return 'FAIL';
    }
} 
/******************case ageing************************/
function caseAgeing(){
	global $db;	
	//~ UPDATE cases as c,cases_cstm as cc set cc.case_ageing_c=DATEDIFF(c.date_modified,c.date_entered) WHERE c.id=cc.id_c and c.deleted=0 and c.state='Closed'
	$fetch_cases = "select cases.id,cases.date_entered from cases join cases_cstm on cases.id=cases_cstm.id_c where cases.state='Open' and cases.deleted=0";
	$result_cases = $db->query($fetch_cases);
	while($row_cases_data = $db->fetchByAssoc($result_cases)){
		$created_date = $row_cases_data['date_entered'];
		$today = date('Y-m-d H:m:s', strtotime('now'));
		$difference_in_days = floor(abs(strtotime($created_date) - strtotime($today)) / 86400);
		$case_id = $row_cases_data['id'];

		$update_case_aging = $db->query("update cases_cstm set case_ageing_c='$difference_in_days' where id_c='$case_id'");	
	}
	return true;
}
/*******************end*******************************/
?>
